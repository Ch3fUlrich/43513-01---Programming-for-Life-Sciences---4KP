# This workflow will upload a Python Package to PyPI when a release is created
name: Upload Python Package

on:
  push:
    branches: [ main]
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      example_input:
        description: 'Manuall trigger for workflow'
        required: false
        default: 'default_value'
    

permissions:
  contents: read  

jobs:
  release-build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Check for requirements.txt
        run: |
          if [ ! -f requirements.txt ]; then
            echo "requirements.txt not found, please ensure it is committed to the repository."
            exit 1
          fi
          echo "requirements.txt found"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements_dev.txt
          pip install -r requirements.txt

      - name: Build release distributions
        run: |
          python -m build

      - name: Run tests and coverage
        run: |
          pytest --cov=Project/classes --cov-report=xml --cov-report=term

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: coverage.xml
          #token: ${{ secrets.CODECOV_TOKEN }} # Optional for private repos

      - name: Lint code
        run: |
          flake8 . || true
        

      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/

  pypi-publish:
    runs-on: ubuntu-latest
    needs:
      - release-build
    permissions:
      id-token: write

    environment:
      name: pypi

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/
  
      - name: Publish release distributions to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
          repository-url: https://test.pypi.org/legacy/
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
        

      # Uncomment the following step to publish to PyPI after verifying TestPyPI
      #- name: Publish release distributions to PyPI
      #  uses: pypa/gh-action-pypi-publish@release/v1
      #  with:
      #    packages-dir: dist/
      #  env:
      #    TWINE_USERNAME: __token__
      #    TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
